//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SimpleWCF.Client.SquareService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SquareService.ISquareService")]
    public interface ISquareService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISquareService/GetSquareValue", ReplyAction="http://tempuri.org/ISquareService/GetSquareValueResponse")]
        System.IAsyncResult BeginGetSquareValue(double dbValue, int intNum, System.AsyncCallback callback, object asyncState);
        
        string EndGetSquareValue(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISquareServiceChannel : SimpleWCF.Client.SquareService.ISquareService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSquareValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSquareValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SquareServiceClient : System.ServiceModel.ClientBase<SimpleWCF.Client.SquareService.ISquareService>, SimpleWCF.Client.SquareService.ISquareService {
        
        private BeginOperationDelegate onBeginGetSquareValueDelegate;
        
        private EndOperationDelegate onEndGetSquareValueDelegate;
        
        private System.Threading.SendOrPostCallback onGetSquareValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SquareServiceClient() {
        }
        
        public SquareServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SquareServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SquareServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SquareServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetSquareValueCompletedEventArgs> GetSquareValueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SimpleWCF.Client.SquareService.ISquareService.BeginGetSquareValue(double dbValue, int intNum, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSquareValue(dbValue, intNum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SimpleWCF.Client.SquareService.ISquareService.EndGetSquareValue(System.IAsyncResult result) {
            return base.Channel.EndGetSquareValue(result);
        }
        
        private System.IAsyncResult OnBeginGetSquareValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double dbValue = ((double)(inValues[0]));
            int intNum = ((int)(inValues[1]));
            return ((SimpleWCF.Client.SquareService.ISquareService)(this)).BeginGetSquareValue(dbValue, intNum, callback, asyncState);
        }
        
        private object[] OnEndGetSquareValue(System.IAsyncResult result) {
            string retVal = ((SimpleWCF.Client.SquareService.ISquareService)(this)).EndGetSquareValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSquareValueCompleted(object state) {
            if ((this.GetSquareValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSquareValueCompleted(this, new GetSquareValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSquareValueAsync(double dbValue, int intNum) {
            this.GetSquareValueAsync(dbValue, intNum, null);
        }
        
        public void GetSquareValueAsync(double dbValue, int intNum, object userState) {
            if ((this.onBeginGetSquareValueDelegate == null)) {
                this.onBeginGetSquareValueDelegate = new BeginOperationDelegate(this.OnBeginGetSquareValue);
            }
            if ((this.onEndGetSquareValueDelegate == null)) {
                this.onEndGetSquareValueDelegate = new EndOperationDelegate(this.OnEndGetSquareValue);
            }
            if ((this.onGetSquareValueCompletedDelegate == null)) {
                this.onGetSquareValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSquareValueCompleted);
            }
            base.InvokeAsync(this.onBeginGetSquareValueDelegate, new object[] {
                        dbValue,
                        intNum}, this.onEndGetSquareValueDelegate, this.onGetSquareValueCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SimpleWCF.Client.SquareService.ISquareService CreateChannel() {
            return new SquareServiceClientChannel(this);
        }
        
        private class SquareServiceClientChannel : ChannelBase<SimpleWCF.Client.SquareService.ISquareService>, SimpleWCF.Client.SquareService.ISquareService {
            
            public SquareServiceClientChannel(System.ServiceModel.ClientBase<SimpleWCF.Client.SquareService.ISquareService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSquareValue(double dbValue, int intNum, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = dbValue;
                _args[1] = intNum;
                System.IAsyncResult _result = base.BeginInvoke("GetSquareValue", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSquareValue(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSquareValue", _args, result)));
                return _result;
            }
        }
    }
}
