//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApplication.ServiceTokenValidation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseUserTokenInfo", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class ResponseUserTokenInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogId {
            get {
                return this.LogIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LogIdField, value) != true)) {
                    this.LogIdField = value;
                    this.RaisePropertyChanged("LogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Energy", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class Energy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnergyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnergyType {
            get {
                return this.EnergyTypeField;
            }
            set {
                if ((this.EnergyTypeField.Equals(value) != true)) {
                    this.EnergyTypeField = value;
                    this.RaisePropertyChanged("EnergyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Business")]
    [System.SerializableAttribute()]
    public partial class ResponseStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
    [System.SerializableAttribute()]
    public partial class ServiceError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeterModel", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class MeterModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AccuracyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanReadBackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnergyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Accuracy {
            get {
                return this.AccuracyField;
            }
            set {
                if ((this.AccuracyField.Equals(value) != true)) {
                    this.AccuracyField = value;
                    this.RaisePropertyChanged("Accuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanReadBack {
            get {
                return this.CanReadBackField;
            }
            set {
                if ((this.CanReadBackField.Equals(value) != true)) {
                    this.CanReadBackField = value;
                    this.RaisePropertyChanged("CanReadBack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnergyId {
            get {
                return this.EnergyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EnergyIdField, value) != true)) {
                    this.EnergyIdField = value;
                    this.RaisePropertyChanged("EnergyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcquisitionParameters", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class AcquisitionParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventedParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParameterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultUnit {
            get {
                return this.DefaultUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultUnitField, value) != true)) {
                    this.DefaultUnitField = value;
                    this.RaisePropertyChanged("DefaultUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventedParameter {
            get {
                return this.InventedParameterField;
            }
            set {
                if ((this.InventedParameterField.Equals(value) != true)) {
                    this.InventedParameterField = value;
                    this.RaisePropertyChanged("InventedParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterDataType {
            get {
                return this.MeterDataTypeField;
            }
            set {
                if ((this.MeterDataTypeField.Equals(value) != true)) {
                    this.MeterDataTypeField = value;
                    this.RaisePropertyChanged("MeterDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParameterType {
            get {
                return this.ParameterTypeField;
            }
            set {
                if ((this.ParameterTypeField.Equals(value) != true)) {
                    this.ParameterTypeField = value;
                    this.RaisePropertyChanged("ParameterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Areas", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class Areas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcreageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoordinateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayedOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentAreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acreage {
            get {
                return this.AcreageField;
            }
            set {
                if ((object.ReferenceEquals(this.AcreageField, value) != true)) {
                    this.AcreageField = value;
                    this.RaisePropertyChanged("Acreage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaType {
            get {
                return this.AreaTypeField;
            }
            set {
                if ((this.AreaTypeField.Equals(value) != true)) {
                    this.AreaTypeField = value;
                    this.RaisePropertyChanged("AreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coordinate {
            get {
                return this.CoordinateField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinateField, value) != true)) {
                    this.CoordinateField = value;
                    this.RaisePropertyChanged("Coordinate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayedOrder {
            get {
                return this.DisplayedOrderField;
            }
            set {
                if ((this.DisplayedOrderField.Equals(value) != true)) {
                    this.DisplayedOrderField = value;
                    this.RaisePropertyChanged("DisplayedOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentAreaId {
            get {
                return this.ParentAreaIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentAreaIdField, value) != true)) {
                    this.ParentAreaIdField = value;
                    this.RaisePropertyChanged("ParentAreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeterModelFieldTypes", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class MeterModelFieldTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterModelIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldTypeId {
            get {
                return this.FieldTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldTypeIdField, value) != true)) {
                    this.FieldTypeIdField = value;
                    this.RaisePropertyChanged("FieldTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterModelId {
            get {
                return this.MeterModelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterModelIdField, value) != true)) {
                    this.MeterModelIdField = value;
                    this.RaisePropertyChanged("MeterModelId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseMeter", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class BaseMeter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseMeterEnergyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseMeterModelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseMeterParentAreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BaseMeterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayedOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitialValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVirtualMeterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseMeterEnergyId {
            get {
                return this.BaseMeterEnergyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseMeterEnergyIdField, value) != true)) {
                    this.BaseMeterEnergyIdField = value;
                    this.RaisePropertyChanged("BaseMeterEnergyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseMeterModelId {
            get {
                return this.BaseMeterModelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseMeterModelIdField, value) != true)) {
                    this.BaseMeterModelIdField = value;
                    this.RaisePropertyChanged("BaseMeterModelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseMeterParentAreaId {
            get {
                return this.BaseMeterParentAreaIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseMeterParentAreaIdField, value) != true)) {
                    this.BaseMeterParentAreaIdField = value;
                    this.RaisePropertyChanged("BaseMeterParentAreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BaseMeterType {
            get {
                return this.BaseMeterTypeField;
            }
            set {
                if ((this.BaseMeterTypeField.Equals(value) != true)) {
                    this.BaseMeterTypeField = value;
                    this.RaisePropertyChanged("BaseMeterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayedOrder {
            get {
                return this.DisplayedOrderField;
            }
            set {
                if ((this.DisplayedOrderField.Equals(value) != true)) {
                    this.DisplayedOrderField = value;
                    this.RaisePropertyChanged("DisplayedOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitialValue {
            get {
                return this.InitialValueField;
            }
            set {
                if ((this.InitialValueField.Equals(value) != true)) {
                    this.InitialValueField = value;
                    this.RaisePropertyChanged("InitialValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVirtualMeter {
            get {
                return this.IsVirtualMeterField;
            }
            set {
                if ((this.IsVirtualMeterField.Equals(value) != true)) {
                    this.IsVirtualMeterField = value;
                    this.RaisePropertyChanged("IsVirtualMeter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterNumber {
            get {
                return this.MeterNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterNumberField, value) != true)) {
                    this.MeterNumberField = value;
                    this.RaisePropertyChanged("MeterNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseMeterAcuisitionParameter", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class BaseMeterAcuisitionParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcuisitionParameterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseMeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcuisitionParameterId {
            get {
                return this.AcuisitionParameterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AcuisitionParameterIdField, value) != true)) {
                    this.AcuisitionParameterIdField = value;
                    this.RaisePropertyChanged("AcuisitionParameterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseMeterId {
            get {
                return this.BaseMeterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseMeterIdField, value) != true)) {
                    this.BaseMeterIdField = value;
                    this.RaisePropertyChanged("BaseMeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PNumber {
            get {
                return this.PNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PNumberField, value) != true)) {
                    this.PNumberField = value;
                    this.RaisePropertyChanged("PNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VirtualMeterParameterInfo", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class VirtualMeterParameterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociatedParameterIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculateFormulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldTypeSyncIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterSyncIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowCalculateFormulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociatedParameterIds {
            get {
                return this.AssociatedParameterIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociatedParameterIdsField, value) != true)) {
                    this.AssociatedParameterIdsField = value;
                    this.RaisePropertyChanged("AssociatedParameterIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalculateFormula {
            get {
                return this.CalculateFormulaField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculateFormulaField, value) != true)) {
                    this.CalculateFormulaField = value;
                    this.RaisePropertyChanged("CalculateFormula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldTypeSyncId {
            get {
                return this.FieldTypeSyncIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldTypeSyncIdField, value) != true)) {
                    this.FieldTypeSyncIdField = value;
                    this.RaisePropertyChanged("FieldTypeSyncId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterDataType {
            get {
                return this.MeterDataTypeField;
            }
            set {
                if ((this.MeterDataTypeField.Equals(value) != true)) {
                    this.MeterDataTypeField = value;
                    this.RaisePropertyChanged("MeterDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterSyncId {
            get {
                return this.MeterSyncIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterSyncIdField, value) != true)) {
                    this.MeterSyncIdField = value;
                    this.RaisePropertyChanged("MeterSyncId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PNumber {
            get {
                return this.PNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PNumberField, value) != true)) {
                    this.PNumberField = value;
                    this.RaisePropertyChanged("PNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordDeleted {
            get {
                return this.RecordDeletedField;
            }
            set {
                if ((this.RecordDeletedField.Equals(value) != true)) {
                    this.RecordDeletedField = value;
                    this.RaisePropertyChanged("RecordDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowCalculateFormula {
            get {
                return this.ShowCalculateFormulaField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowCalculateFormulaField, value) != true)) {
                    this.ShowCalculateFormulaField = value;
                    this.RaisePropertyChanged("ShowCalculateFormula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MinutesRecord", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class MinutesRecord : TestApplication.ServiceTokenValidation.BaseRecord {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRecord", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestApplication.ServiceTokenValidation.HourRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestApplication.ServiceTokenValidation.DayRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestApplication.ServiceTokenValidation.MonthRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestApplication.ServiceTokenValidation.YearRecord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestApplication.ServiceTokenValidation.MinutesRecord))]
    public partial class BaseRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcuisitionParameterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseMeterAcquisitionParameterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseMeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LinkCompareTotalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LinkCompareTotalMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SameCompareTotalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SameCompareTotalMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalMoneyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcuisitionParameterId {
            get {
                return this.AcuisitionParameterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AcuisitionParameterIdField, value) != true)) {
                    this.AcuisitionParameterIdField = value;
                    this.RaisePropertyChanged("AcuisitionParameterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseMeterAcquisitionParameterId {
            get {
                return this.BaseMeterAcquisitionParameterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseMeterAcquisitionParameterIdField, value) != true)) {
                    this.BaseMeterAcquisitionParameterIdField = value;
                    this.RaisePropertyChanged("BaseMeterAcquisitionParameterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseMeterId {
            get {
                return this.BaseMeterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseMeterIdField, value) != true)) {
                    this.BaseMeterIdField = value;
                    this.RaisePropertyChanged("BaseMeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeField, value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HTime {
            get {
                return this.HTimeField;
            }
            set {
                if ((this.HTimeField.Equals(value) != true)) {
                    this.HTimeField = value;
                    this.RaisePropertyChanged("HTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LinkCompareTotalData {
            get {
                return this.LinkCompareTotalDataField;
            }
            set {
                if ((this.LinkCompareTotalDataField.Equals(value) != true)) {
                    this.LinkCompareTotalDataField = value;
                    this.RaisePropertyChanged("LinkCompareTotalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LinkCompareTotalMoney {
            get {
                return this.LinkCompareTotalMoneyField;
            }
            set {
                if ((this.LinkCompareTotalMoneyField.Equals(value) != true)) {
                    this.LinkCompareTotalMoneyField = value;
                    this.RaisePropertyChanged("LinkCompareTotalMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordTypeId {
            get {
                return this.RecordTypeIdField;
            }
            set {
                if ((this.RecordTypeIdField.Equals(value) != true)) {
                    this.RecordTypeIdField = value;
                    this.RaisePropertyChanged("RecordTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SameCompareTotalData {
            get {
                return this.SameCompareTotalDataField;
            }
            set {
                if ((this.SameCompareTotalDataField.Equals(value) != true)) {
                    this.SameCompareTotalDataField = value;
                    this.RaisePropertyChanged("SameCompareTotalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SameCompareTotalMoney {
            get {
                return this.SameCompareTotalMoneyField;
            }
            set {
                if ((this.SameCompareTotalMoneyField.Equals(value) != true)) {
                    this.SameCompareTotalMoneyField = value;
                    this.RaisePropertyChanged("SameCompareTotalMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalData {
            get {
                return this.TotalDataField;
            }
            set {
                if ((this.TotalDataField.Equals(value) != true)) {
                    this.TotalDataField = value;
                    this.RaisePropertyChanged("TotalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalMoney {
            get {
                return this.TotalMoneyField;
            }
            set {
                if ((this.TotalMoneyField.Equals(value) != true)) {
                    this.TotalMoneyField = value;
                    this.RaisePropertyChanged("TotalMoney");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HourRecord", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class HourRecord : TestApplication.ServiceTokenValidation.BaseRecord {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayRecord", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class DayRecord : TestApplication.ServiceTokenValidation.BaseRecord {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonthRecord", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class MonthRecord : TestApplication.ServiceTokenValidation.BaseRecord {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YearRecord", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class YearRecord : TestApplication.ServiceTokenValidation.BaseRecord {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnergyPowerMeterDataTree", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class EnergyPowerMeterDataTree : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeType {
            get {
                return this.NodeTypeField;
            }
            set {
                if ((this.NodeTypeField.Equals(value) != true)) {
                    this.NodeTypeField = value;
                    this.RaisePropertyChanged("NodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnergyMeterHistoryDataRecord", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.Domain")]
    [System.SerializableAttribute()]
    public partial class EnergyMeterHistoryDataRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CloudBaseMeterFieldTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LinkCompareTotalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LinkCompareTotalMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SameCompareTotalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SameCompareTotalMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalMoneyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CloudBaseMeterFieldTypeId {
            get {
                return this.CloudBaseMeterFieldTypeIdField;
            }
            set {
                if ((this.CloudBaseMeterFieldTypeIdField.Equals(value) != true)) {
                    this.CloudBaseMeterFieldTypeIdField = value;
                    this.RaisePropertyChanged("CloudBaseMeterFieldTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationType {
            get {
                return this.DurationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationTypeField, value) != true)) {
                    this.DurationTypeField = value;
                    this.RaisePropertyChanged("DurationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HTime {
            get {
                return this.HTimeField;
            }
            set {
                if ((this.HTimeField.Equals(value) != true)) {
                    this.HTimeField = value;
                    this.RaisePropertyChanged("HTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LinkCompareTotalData {
            get {
                return this.LinkCompareTotalDataField;
            }
            set {
                if ((this.LinkCompareTotalDataField.Equals(value) != true)) {
                    this.LinkCompareTotalDataField = value;
                    this.RaisePropertyChanged("LinkCompareTotalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LinkCompareTotalMoney {
            get {
                return this.LinkCompareTotalMoneyField;
            }
            set {
                if ((this.LinkCompareTotalMoneyField.Equals(value) != true)) {
                    this.LinkCompareTotalMoneyField = value;
                    this.RaisePropertyChanged("LinkCompareTotalMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordTypeId {
            get {
                return this.RecordTypeIdField;
            }
            set {
                if ((this.RecordTypeIdField.Equals(value) != true)) {
                    this.RecordTypeIdField = value;
                    this.RaisePropertyChanged("RecordTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SameCompareTotalData {
            get {
                return this.SameCompareTotalDataField;
            }
            set {
                if ((this.SameCompareTotalDataField.Equals(value) != true)) {
                    this.SameCompareTotalDataField = value;
                    this.RaisePropertyChanged("SameCompareTotalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SameCompareTotalMoney {
            get {
                return this.SameCompareTotalMoneyField;
            }
            set {
                if ((this.SameCompareTotalMoneyField.Equals(value) != true)) {
                    this.SameCompareTotalMoneyField = value;
                    this.RaisePropertyChanged("SameCompareTotalMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalData {
            get {
                return this.TotalDataField;
            }
            set {
                if ((this.TotalDataField.Equals(value) != true)) {
                    this.TotalDataField = value;
                    this.RaisePropertyChanged("TotalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalMoney {
            get {
                return this.TotalMoneyField;
            }
            set {
                if ((this.TotalMoneyField.Equals(value) != true)) {
                    this.TotalMoneyField = value;
                    this.RaisePropertyChanged("TotalMoney");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBTMData", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF.FileUtilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class RequestBTMData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestApplication.ServiceTokenValidation.DataBase[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestApplication.ServiceTokenValidation.DataBase[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataBase", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF.FileUtilities" +
        "")]
    [System.SerializableAttribute()]
    public partial class DataBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BF {
            get {
                return this.BFField;
            }
            set {
                if ((this.BFField.Equals(value) != true)) {
                    this.BFField = value;
                    this.RaisePropertyChanged("BF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double D {
            get {
                return this.DField;
            }
            set {
                if ((this.DField.Equals(value) != true)) {
                    this.DField = value;
                    this.RaisePropertyChanged("D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DT {
            get {
                return this.DTField;
            }
            set {
                if ((this.DTField.Equals(value) != true)) {
                    this.DTField = value;
                    this.RaisePropertyChanged("DT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string T {
            get {
                return this.TField;
            }
            set {
                if ((object.ReferenceEquals(this.TField, value) != true)) {
                    this.TField = value;
                    this.RaisePropertyChanged("T");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceTokenValidation.IDinoTechDataSyncService")]
    public interface IDinoTechDataSyncService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/ValidateUser", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/ValidateUserResponse")]
        TestApplication.ServiceTokenValidation.ResponseUserTokenInfo ValidateUser(string userId, string password, string timeZoneOffSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitEnergies", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitEnergiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitEnergiesServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitEnergies(TestApplication.ServiceTokenValidation.Energy[] Energies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMeterModels", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitMeterModelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMeterModelsServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitMeterModels(TestApplication.ServiceTokenValidation.MeterModel[] meterModelItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitAquisitionParameters", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitAquisitionParametersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitAquisitionParametersServiceErro" +
            "rFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitAquisitionParameters(TestApplication.ServiceTokenValidation.AcquisitionParameters[] acquisitionParametersItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitRegionalAreas", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitRegionalAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitRegionalAreasServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitRegionalAreas(TestApplication.ServiceTokenValidation.Areas[] areaItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMeterModelFieldTypes", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitMeterModelFieldTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMeterModelFieldTypesServiceErro" +
            "rFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitMeterModelFieldTypes(TestApplication.ServiceTokenValidation.MeterModelFieldTypes[] meterModelFieldTypesItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitBaseMeters", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitBaseMetersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitBaseMetersServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitBaseMeters(TestApplication.ServiceTokenValidation.BaseMeter[] baseMeterItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitBaseMeterAcquisitionParameters", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitBaseMeterAcquisitionParametersR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitBaseMeterAcquisitionParametersS" +
            "erviceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        System.Collections.Generic.Dictionary<int, int> SubmitBaseMeterAcquisitionParameters(TestApplication.ServiceTokenValidation.BaseMeterAcuisitionParameter[] baseMeteAcuisitionParameterItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitVirtualMeterAcquisitionParamete" +
            "rs", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitVirtualMeterAcquisitionParamete" +
            "rsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitVirtualMeterAcquisitionParamete" +
            "rsServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        System.Collections.Generic.Dictionary<int, int> SubmitVirtualMeterAcquisitionParameters(TestApplication.ServiceTokenValidation.VirtualMeterParameterInfo[] virtualMeteParameterInfoItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMinutesRecords", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitMinutesRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMinutesRecordsServiceErrorFault" +
            "", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitMinutesRecords(TestApplication.ServiceTokenValidation.MinutesRecord[] minutesRecordItems, string lastSyncDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitHourRecords", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitHourRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitHourRecordsServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitHourRecords(TestApplication.ServiceTokenValidation.HourRecord[] hourRecordItems, string lastSyncDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitDayRecords", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitDayRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitDayRecordsServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitDayRecords(TestApplication.ServiceTokenValidation.DayRecord[] dayRecordItems, string lastSyncDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMonthRecords", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitMonthRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitMonthRecordsServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitMonthRecords(TestApplication.ServiceTokenValidation.MonthRecord[] monthRecordItems, string lastSyncDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SubmitYearRecords", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SubmitYearRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SubmitYearRecordsServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SubmitYearRecords(TestApplication.ServiceTokenValidation.YearRecord[] yearRecordItems, string lastSyncDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/UpdateSyncLogInfo", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/UpdateSyncLogInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/UpdateSyncLogInfoServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus UpdateSyncLogInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetMinutesRecordSyncCount", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetMinutesRecordSyncCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetMinutesRecordSyncCountServiceError" +
            "Fault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        int GetMinutesRecordSyncCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetHourRecordSyncCount", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetHourRecordSyncCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetHourRecordSyncCountServiceErrorFau" +
            "lt", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        int GetHourRecordSyncCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetDayRecordSyncCount", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetDayRecordSyncCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetDayRecordSyncCountServiceErrorFaul" +
            "t", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        int GetDayRecordSyncCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetMonthRecordSyncCount", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetMonthRecordSyncCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetMonthRecordSyncCountServiceErrorFa" +
            "ult", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        int GetMonthRecordSyncCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetYearRecordSyncCount", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetYearRecordSyncCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetYearRecordSyncCountServiceErrorFau" +
            "lt", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        int GetYearRecordSyncCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetMinutesRecordsLastSyncDateTime", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetMinutesRecordsLastSyncDateTimeResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetMinutesRecordsLastSyncDateTimeServ" +
            "iceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        string GetMinutesRecordsLastSyncDateTime(int bmftId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetInstantaneousDataLastSyncDateTime", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetInstantaneousDataLastSyncDateTimeR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetInstantaneousDataLastSyncDateTimeS" +
            "erviceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        string GetInstantaneousDataLastSyncDateTime(string bmfId, int dType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetHourRecordLastSyncDateTime", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetHourRecordLastSyncDateTimeResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetHourRecordLastSyncDateTimeServiceE" +
            "rrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        string GetHourRecordLastSyncDateTime(int bmftId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetDayRecordsLastSyncDateTime", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetDayRecordsLastSyncDateTimeResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetDayRecordsLastSyncDateTimeServiceE" +
            "rrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        string GetDayRecordsLastSyncDateTime(int bmftId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetMonthRecordLastSyncDateTime", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetMonthRecordLastSyncDateTimeRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetMonthRecordLastSyncDateTimeService" +
            "ErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        string GetMonthRecordLastSyncDateTime(int bmftId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetYearRecordLastSyncDateTime", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetYearRecordLastSyncDateTimeResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetYearRecordLastSyncDateTimeServiceE" +
            "rrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        string GetYearRecordLastSyncDateTime(int bmftId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/GetListOfAllAreaMeterAndParametersOnC" +
            "loud", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/GetListOfAllAreaMeterAndParametersOnC" +
            "loudResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/GetListOfAllAreaMeterAndParametersOnC" +
            "loudServiceErrorFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.EnergyPowerMeterDataTree[] GetListOfAllAreaMeterAndParametersOnCloud();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/SyncEnergyMeterDataToCloud", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/SyncEnergyMeterDataToCloudResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/SyncEnergyMeterDataToCloudServiceErro" +
            "rFault", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus SyncEnergyMeterDataToCloud(TestApplication.ServiceTokenValidation.EnergyMeterHistoryDataRecord[] energyMeterHistoryDataRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDinoTechDataSyncService/AddRealTimeBTMeterData", ReplyAction="http://tempuri.org/IDinoTechDataSyncService/AddRealTimeBTMeterDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestApplication.ServiceTokenValidation.ServiceError), Action="http://tempuri.org/IDinoTechDataSyncService/AddRealTimeBTMeterDataServiceErrorFau" +
            "lt", Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DinoTechDataSyncService.WCF")]
        TestApplication.ServiceTokenValidation.ResponseStatus AddRealTimeBTMeterData(TestApplication.ServiceTokenValidation.RequestBTMData requestBTMeterData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDinoTechDataSyncServiceChannel : TestApplication.ServiceTokenValidation.IDinoTechDataSyncService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DinoTechDataSyncServiceClient : System.ServiceModel.ClientBase<TestApplication.ServiceTokenValidation.IDinoTechDataSyncService>, TestApplication.ServiceTokenValidation.IDinoTechDataSyncService {
        
        public DinoTechDataSyncServiceClient() {
        }
        
        public DinoTechDataSyncServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DinoTechDataSyncServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DinoTechDataSyncServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DinoTechDataSyncServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestApplication.ServiceTokenValidation.ResponseUserTokenInfo ValidateUser(string userId, string password, string timeZoneOffSet) {
            return base.Channel.ValidateUser(userId, password, timeZoneOffSet);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitEnergies(TestApplication.ServiceTokenValidation.Energy[] Energies) {
            return base.Channel.SubmitEnergies(Energies);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitMeterModels(TestApplication.ServiceTokenValidation.MeterModel[] meterModelItems) {
            return base.Channel.SubmitMeterModels(meterModelItems);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitAquisitionParameters(TestApplication.ServiceTokenValidation.AcquisitionParameters[] acquisitionParametersItems) {
            return base.Channel.SubmitAquisitionParameters(acquisitionParametersItems);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitRegionalAreas(TestApplication.ServiceTokenValidation.Areas[] areaItems) {
            return base.Channel.SubmitRegionalAreas(areaItems);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitMeterModelFieldTypes(TestApplication.ServiceTokenValidation.MeterModelFieldTypes[] meterModelFieldTypesItems) {
            return base.Channel.SubmitMeterModelFieldTypes(meterModelFieldTypesItems);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitBaseMeters(TestApplication.ServiceTokenValidation.BaseMeter[] baseMeterItems) {
            return base.Channel.SubmitBaseMeters(baseMeterItems);
        }
        
        public System.Collections.Generic.Dictionary<int, int> SubmitBaseMeterAcquisitionParameters(TestApplication.ServiceTokenValidation.BaseMeterAcuisitionParameter[] baseMeteAcuisitionParameterItems) {
            return base.Channel.SubmitBaseMeterAcquisitionParameters(baseMeteAcuisitionParameterItems);
        }
        
        public System.Collections.Generic.Dictionary<int, int> SubmitVirtualMeterAcquisitionParameters(TestApplication.ServiceTokenValidation.VirtualMeterParameterInfo[] virtualMeteParameterInfoItems) {
            return base.Channel.SubmitVirtualMeterAcquisitionParameters(virtualMeteParameterInfoItems);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitMinutesRecords(TestApplication.ServiceTokenValidation.MinutesRecord[] minutesRecordItems, string lastSyncDateTime) {
            return base.Channel.SubmitMinutesRecords(minutesRecordItems, lastSyncDateTime);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitHourRecords(TestApplication.ServiceTokenValidation.HourRecord[] hourRecordItems, string lastSyncDateTime) {
            return base.Channel.SubmitHourRecords(hourRecordItems, lastSyncDateTime);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitDayRecords(TestApplication.ServiceTokenValidation.DayRecord[] dayRecordItems, string lastSyncDateTime) {
            return base.Channel.SubmitDayRecords(dayRecordItems, lastSyncDateTime);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitMonthRecords(TestApplication.ServiceTokenValidation.MonthRecord[] monthRecordItems, string lastSyncDateTime) {
            return base.Channel.SubmitMonthRecords(monthRecordItems, lastSyncDateTime);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SubmitYearRecords(TestApplication.ServiceTokenValidation.YearRecord[] yearRecordItems, string lastSyncDateTime) {
            return base.Channel.SubmitYearRecords(yearRecordItems, lastSyncDateTime);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus UpdateSyncLogInfo() {
            return base.Channel.UpdateSyncLogInfo();
        }
        
        public int GetMinutesRecordSyncCount() {
            return base.Channel.GetMinutesRecordSyncCount();
        }
        
        public int GetHourRecordSyncCount() {
            return base.Channel.GetHourRecordSyncCount();
        }
        
        public int GetDayRecordSyncCount() {
            return base.Channel.GetDayRecordSyncCount();
        }
        
        public int GetMonthRecordSyncCount() {
            return base.Channel.GetMonthRecordSyncCount();
        }
        
        public int GetYearRecordSyncCount() {
            return base.Channel.GetYearRecordSyncCount();
        }
        
        public string GetMinutesRecordsLastSyncDateTime(int bmftId) {
            return base.Channel.GetMinutesRecordsLastSyncDateTime(bmftId);
        }
        
        public string GetInstantaneousDataLastSyncDateTime(string bmfId, int dType) {
            return base.Channel.GetInstantaneousDataLastSyncDateTime(bmfId, dType);
        }
        
        public string GetHourRecordLastSyncDateTime(int bmftId) {
            return base.Channel.GetHourRecordLastSyncDateTime(bmftId);
        }
        
        public string GetDayRecordsLastSyncDateTime(int bmftId) {
            return base.Channel.GetDayRecordsLastSyncDateTime(bmftId);
        }
        
        public string GetMonthRecordLastSyncDateTime(int bmftId) {
            return base.Channel.GetMonthRecordLastSyncDateTime(bmftId);
        }
        
        public string GetYearRecordLastSyncDateTime(int bmftId) {
            return base.Channel.GetYearRecordLastSyncDateTime(bmftId);
        }
        
        public TestApplication.ServiceTokenValidation.EnergyPowerMeterDataTree[] GetListOfAllAreaMeterAndParametersOnCloud() {
            return base.Channel.GetListOfAllAreaMeterAndParametersOnCloud();
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus SyncEnergyMeterDataToCloud(TestApplication.ServiceTokenValidation.EnergyMeterHistoryDataRecord[] energyMeterHistoryDataRecord) {
            return base.Channel.SyncEnergyMeterDataToCloud(energyMeterHistoryDataRecord);
        }
        
        public TestApplication.ServiceTokenValidation.ResponseStatus AddRealTimeBTMeterData(TestApplication.ServiceTokenValidation.RequestBTMData requestBTMeterData) {
            return base.Channel.AddRealTimeBTMeterData(requestBTMeterData);
        }
    }
}
